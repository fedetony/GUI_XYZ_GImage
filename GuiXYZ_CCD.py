# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\GuiXYZ_CommandConfigurationDialog.ui'
#
# Created by: PyQt5 UI code generator 5.13.0
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Dialog_CCD(object):
    def setupUi(self, Dialog_CCD):
        Dialog_CCD.setObjectName("Dialog_CCD")
        Dialog_CCD.resize(808, 615)
        self.verticalLayout = QtWidgets.QVBoxLayout(Dialog_CCD)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBox_CCD = QtWidgets.QGroupBox(Dialog_CCD)
        self.groupBox_CCD.setObjectName("groupBox_CCD")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox_CCD)
        self.gridLayout.setObjectName("gridLayout")
        self.splitter = QtWidgets.QSplitter(self.groupBox_CCD)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.tableWidget_CCD = QtWidgets.QTableWidget(self.splitter)
        self.tableWidget_CCD.setObjectName("tableWidget_CCD")
        self.tableWidget_CCD.setColumnCount(0)
        self.tableWidget_CCD.setRowCount(0)
        self.frame_CCD = QtWidgets.QFrame(self.splitter)
        self.frame_CCD.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_CCD.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_CCD.setObjectName("frame_CCD")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame_CCD)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.comboBox_CCD_interface = QtWidgets.QComboBox(self.frame_CCD)
        self.comboBox_CCD_interface.setObjectName("comboBox_CCD_interface")
        self.horizontalLayout.addWidget(self.comboBox_CCD_interface)
        self.label_CCD_interfaceName = QtWidgets.QLabel(self.frame_CCD)
        self.label_CCD_interfaceName.setText("")
        self.label_CCD_interfaceName.setObjectName("label_CCD_interfaceName")
        self.horizontalLayout.addWidget(self.label_CCD_interfaceName)
        self.pushButton_CCD_AddInterface = QtWidgets.QPushButton(self.frame_CCD)
        self.pushButton_CCD_AddInterface.setMaximumSize(QtCore.QSize(25, 16777215))
        self.pushButton_CCD_AddInterface.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("img/Plus-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_CCD_AddInterface.setIcon(icon)
        self.pushButton_CCD_AddInterface.setObjectName("pushButton_CCD_AddInterface")
        self.horizontalLayout.addWidget(self.pushButton_CCD_AddInterface)
        self.pushButton_CCD_DelInterface = QtWidgets.QPushButton(self.frame_CCD)
        self.pushButton_CCD_DelInterface.setMaximumSize(QtCore.QSize(25, 16777215))
        self.pushButton_CCD_DelInterface.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("img/Actions-process-stop-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_CCD_DelInterface.setIcon(icon1)
        self.pushButton_CCD_DelInterface.setObjectName("pushButton_CCD_DelInterface")
        self.horizontalLayout.addWidget(self.pushButton_CCD_DelInterface)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.groupBox_CCD_actionFiles = QtWidgets.QGroupBox(self.frame_CCD)
        self.groupBox_CCD_actionFiles.setObjectName("groupBox_CCD_actionFiles")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox_CCD_actionFiles)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_CCD_Command_Filestatus = QtWidgets.QLabel(self.groupBox_CCD_actionFiles)
        self.label_CCD_Command_Filestatus.setObjectName("label_CCD_Command_Filestatus")
        self.gridLayout_2.addWidget(self.label_CCD_Command_Filestatus, 0, 1, 1, 1)
        self.pushButton_CCD_Load_Commands = QtWidgets.QPushButton(self.groupBox_CCD_actionFiles)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("img/open-file-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_CCD_Load_Commands.setIcon(icon2)
        self.pushButton_CCD_Load_Commands.setObjectName("pushButton_CCD_Load_Commands")
        self.gridLayout_2.addWidget(self.pushButton_CCD_Load_Commands, 1, 0, 1, 1)
        self.pushButton_CCD_Save_Commands = QtWidgets.QPushButton(self.groupBox_CCD_actionFiles)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("img/Save-as-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_CCD_Save_Commands.setIcon(icon3)
        self.pushButton_CCD_Save_Commands.setObjectName("pushButton_CCD_Save_Commands")
        self.gridLayout_2.addWidget(self.pushButton_CCD_Save_Commands, 1, 1, 1, 1)
        self.pushButton_CCD_Refresh_Commands_File = QtWidgets.QPushButton(self.groupBox_CCD_actionFiles)
        self.pushButton_CCD_Refresh_Commands_File.setObjectName("pushButton_CCD_Refresh_Commands_File")
        self.gridLayout_2.addWidget(self.pushButton_CCD_Refresh_Commands_File, 0, 0, 1, 1)
        self.verticalLayout_2.addWidget(self.groupBox_CCD_actionFiles)
        self.tabWidget_CCD_configs = QtWidgets.QTabWidget(self.frame_CCD)
        self.tabWidget_CCD_configs.setMaximumSize(QtCore.QSize(500, 16777215))
        self.tabWidget_CCD_configs.setTabPosition(QtWidgets.QTabWidget.West)
        self.tabWidget_CCD_configs.setObjectName("tabWidget_CCD_configs")
        self.tab_CCD_ActionConfig = QtWidgets.QWidget()
        self.tab_CCD_ActionConfig.setObjectName("tab_CCD_ActionConfig")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.tab_CCD_ActionConfig)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.groupBox_CCD_actionChanges = QtWidgets.QGroupBox(self.tab_CCD_ActionConfig)
        self.groupBox_CCD_actionChanges.setObjectName("groupBox_CCD_actionChanges")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.groupBox_CCD_actionChanges)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.comboBox_CCD_action = QtWidgets.QComboBox(self.groupBox_CCD_actionChanges)
        self.comboBox_CCD_action.setObjectName("comboBox_CCD_action")
        self.verticalLayout_5.addWidget(self.comboBox_CCD_action)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.lineEdit_CCD_action = QtWidgets.QLineEdit(self.groupBox_CCD_actionChanges)
        self.lineEdit_CCD_action.setObjectName("lineEdit_CCD_action")
        self.horizontalLayout_2.addWidget(self.lineEdit_CCD_action)
        self.pushButton_CCD_actionAdd = QtWidgets.QPushButton(self.groupBox_CCD_actionChanges)
        self.pushButton_CCD_actionAdd.setMaximumSize(QtCore.QSize(25, 25))
        self.pushButton_CCD_actionAdd.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("img/add-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_CCD_actionAdd.setIcon(icon4)
        self.pushButton_CCD_actionAdd.setObjectName("pushButton_CCD_actionAdd")
        self.horizontalLayout_2.addWidget(self.pushButton_CCD_actionAdd)
        self.pushButton_CCD_actionDel = QtWidgets.QPushButton(self.groupBox_CCD_actionChanges)
        self.pushButton_CCD_actionDel.setMaximumSize(QtCore.QSize(25, 25))
        self.pushButton_CCD_actionDel.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("img/math-minus-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_CCD_actionDel.setIcon(icon5)
        self.pushButton_CCD_actionDel.setObjectName("pushButton_CCD_actionDel")
        self.horizontalLayout_2.addWidget(self.pushButton_CCD_actionDel)
        self.verticalLayout_5.addLayout(self.horizontalLayout_2)
        self.lineEdit_CCD_Format = QtWidgets.QLineEdit(self.groupBox_CCD_actionChanges)
        self.lineEdit_CCD_Format.setObjectName("lineEdit_CCD_Format")
        self.verticalLayout_5.addWidget(self.lineEdit_CCD_Format)
        self.tableWidget_CCD_actionParam = QtWidgets.QTableWidget(self.groupBox_CCD_actionChanges)
        self.tableWidget_CCD_actionParam.setObjectName("tableWidget_CCD_actionParam")
        self.tableWidget_CCD_actionParam.setColumnCount(0)
        self.tableWidget_CCD_actionParam.setRowCount(0)
        self.verticalLayout_5.addWidget(self.tableWidget_CCD_actionParam)
        self.label_CCD_testResultFormat = QtWidgets.QLabel(self.groupBox_CCD_actionChanges)
        self.label_CCD_testResultFormat.setText("")
        self.label_CCD_testResultFormat.setObjectName("label_CCD_testResultFormat")
        self.verticalLayout_5.addWidget(self.label_CCD_testResultFormat)
        self.pushButton_CCD_actionTest = QtWidgets.QPushButton(self.groupBox_CCD_actionChanges)
        self.pushButton_CCD_actionTest.setObjectName("pushButton_CCD_actionTest")
        self.verticalLayout_5.addWidget(self.pushButton_CCD_actionTest)
        self.label_CCD_testResult = QtWidgets.QLabel(self.groupBox_CCD_actionChanges)
        self.label_CCD_testResult.setText("")
        self.label_CCD_testResult.setObjectName("label_CCD_testResult")
        self.verticalLayout_5.addWidget(self.label_CCD_testResult)
        self.gridLayout_3.addWidget(self.groupBox_CCD_actionChanges, 1, 0, 1, 1)
        self.tabWidget_CCD_configs.addTab(self.tab_CCD_ActionConfig, "")
        self.tab_CCD_ReadConfig = QtWidgets.QWidget()
        self.tab_CCD_ReadConfig.setObjectName("tab_CCD_ReadConfig")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.tab_CCD_ReadConfig)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.groupBox_CCD_readChanges = QtWidgets.QGroupBox(self.tab_CCD_ReadConfig)
        self.groupBox_CCD_readChanges.setMaximumSize(QtCore.QSize(600, 16777215))
        self.groupBox_CCD_readChanges.setObjectName("groupBox_CCD_readChanges")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.groupBox_CCD_readChanges)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.comboBox_CCD_readaction = QtWidgets.QComboBox(self.groupBox_CCD_readChanges)
        self.comboBox_CCD_readaction.setObjectName("comboBox_CCD_readaction")
        self.verticalLayout_4.addWidget(self.comboBox_CCD_readaction)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.lineEdit_CCD_readaction = QtWidgets.QLineEdit(self.groupBox_CCD_readChanges)
        self.lineEdit_CCD_readaction.setObjectName("lineEdit_CCD_readaction")
        self.horizontalLayout_3.addWidget(self.lineEdit_CCD_readaction)
        self.pushButton_CCD_readactionAdd = QtWidgets.QPushButton(self.groupBox_CCD_readChanges)
        self.pushButton_CCD_readactionAdd.setMaximumSize(QtCore.QSize(25, 25))
        self.pushButton_CCD_readactionAdd.setText("")
        self.pushButton_CCD_readactionAdd.setIcon(icon4)
        self.pushButton_CCD_readactionAdd.setObjectName("pushButton_CCD_readactionAdd")
        self.horizontalLayout_3.addWidget(self.pushButton_CCD_readactionAdd)
        self.pushButton_CCD_readactionDel = QtWidgets.QPushButton(self.groupBox_CCD_readChanges)
        self.pushButton_CCD_readactionDel.setMaximumSize(QtCore.QSize(25, 25))
        self.pushButton_CCD_readactionDel.setText("")
        self.pushButton_CCD_readactionDel.setIcon(icon5)
        self.pushButton_CCD_readactionDel.setObjectName("pushButton_CCD_readactionDel")
        self.horizontalLayout_3.addWidget(self.pushButton_CCD_readactionDel)
        self.verticalLayout_4.addLayout(self.horizontalLayout_3)
        self.lineEdit_CCD_readFormat = QtWidgets.QLineEdit(self.groupBox_CCD_readChanges)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_CCD_readFormat.sizePolicy().hasHeightForWidth())
        self.lineEdit_CCD_readFormat.setSizePolicy(sizePolicy)
        self.lineEdit_CCD_readFormat.setObjectName("lineEdit_CCD_readFormat")
        self.verticalLayout_4.addWidget(self.lineEdit_CCD_readFormat)
        self.line = QtWidgets.QFrame(self.groupBox_CCD_readChanges)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.line.sizePolicy().hasHeightForWidth())
        self.line.setSizePolicy(sizePolicy)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_4.addWidget(self.line)
        self.lineEdit_CCD_testRead_text = QtWidgets.QLineEdit(self.groupBox_CCD_readChanges)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_CCD_testRead_text.sizePolicy().hasHeightForWidth())
        self.lineEdit_CCD_testRead_text.setSizePolicy(sizePolicy)
        self.lineEdit_CCD_testRead_text.setObjectName("lineEdit_CCD_testRead_text")
        self.verticalLayout_4.addWidget(self.lineEdit_CCD_testRead_text)
        self.tableWidget_CCD_readactionParam = QtWidgets.QTableWidget(self.groupBox_CCD_readChanges)
        self.tableWidget_CCD_readactionParam.setObjectName("tableWidget_CCD_readactionParam")
        self.tableWidget_CCD_readactionParam.setColumnCount(0)
        self.tableWidget_CCD_readactionParam.setRowCount(0)
        self.verticalLayout_4.addWidget(self.tableWidget_CCD_readactionParam)
        self.label_CCD_testreadResultFormat = QtWidgets.QLabel(self.groupBox_CCD_readChanges)
        self.label_CCD_testreadResultFormat.setText("")
        self.label_CCD_testreadResultFormat.setObjectName("label_CCD_testreadResultFormat")
        self.verticalLayout_4.addWidget(self.label_CCD_testreadResultFormat)
        self.pushButton_CCD_readactionTest = QtWidgets.QPushButton(self.groupBox_CCD_readChanges)
        self.pushButton_CCD_readactionTest.setObjectName("pushButton_CCD_readactionTest")
        self.verticalLayout_4.addWidget(self.pushButton_CCD_readactionTest)
        self.label_CCD_testreadResult = QtWidgets.QLabel(self.groupBox_CCD_readChanges)
        self.label_CCD_testreadResult.setText("")
        self.label_CCD_testreadResult.setObjectName("label_CCD_testreadResult")
        self.verticalLayout_4.addWidget(self.label_CCD_testreadResult)
        self.verticalLayout_3.addWidget(self.groupBox_CCD_readChanges)
        self.tabWidget_CCD_configs.addTab(self.tab_CCD_ReadConfig, "")
        self.tab_CCD_GeneralConfig = QtWidgets.QWidget()
        self.tab_CCD_GeneralConfig.setObjectName("tab_CCD_GeneralConfig")
        self.tabWidget_CCD_configs.addTab(self.tab_CCD_GeneralConfig, "")
        self.verticalLayout_2.addWidget(self.tabWidget_CCD_configs)
        self.gridLayout.addWidget(self.splitter, 0, 0, 1, 1)
        self.verticalLayout.addWidget(self.groupBox_CCD)
        self.buttonBox = QtWidgets.QDialogButtonBox(Dialog_CCD)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout.addWidget(self.buttonBox)

        self.retranslateUi(Dialog_CCD)
        self.tabWidget_CCD_configs.setCurrentIndex(0)
        self.buttonBox.accepted.connect(Dialog_CCD.accept)
        self.buttonBox.rejected.connect(Dialog_CCD.reject)
        QtCore.QMetaObject.connectSlotsByName(Dialog_CCD)

    def retranslateUi(self, Dialog_CCD):
        _translate = QtCore.QCoreApplication.translate
        Dialog_CCD.setWindowTitle(_translate("Dialog_CCD", "Command Configuration Dialog"))
        self.groupBox_CCD.setTitle(_translate("Dialog_CCD", "Command Configuration"))
        self.pushButton_CCD_AddInterface.setToolTip(_translate("Dialog_CCD", "Add new or clone interface"))
        self.pushButton_CCD_DelInterface.setToolTip(_translate("Dialog_CCD", "To delete the interface set interfaceName to DELETE"))
        self.groupBox_CCD_actionFiles.setTitle(_translate("Dialog_CCD", "Filename"))
        self.label_CCD_Command_Filestatus.setText(_translate("Dialog_CCD", "File Status"))
        self.pushButton_CCD_Load_Commands.setText(_translate("Dialog_CCD", "Load Commands"))
        self.pushButton_CCD_Save_Commands.setText(_translate("Dialog_CCD", "Save Commands"))
        self.pushButton_CCD_Refresh_Commands_File.setToolTip(_translate("Dialog_CCD", "Reloads information in file to the GUI if it changed manually"))
        self.pushButton_CCD_Refresh_Commands_File.setText(_translate("Dialog_CCD", "Refresh File"))
        self.groupBox_CCD_actionChanges.setToolTip(_translate("Dialog_CCD", "No command Leave empty \n"
"{param} replaces the parameter param with the value given\n"
"Example: <X{x}> will return X20.3 when parameter \'x\'=20.3\n"
"{actionName} will replace the action Format of the same interface \n"
"{actionName(interfaceId)} will replace the action Format of the specified interface id \n"
"{char(##)} #in decimal or {char(0x##)} #in hexadecimal will replace the special character in utf-8 \n"
"example: {char(0x18)} is ctrl+x\n"
"[] optional must contain parameters in {} to be taken in count \n"
"example: test[ X{x}] when param \'x\'=\'_x\' will return \"test X_x\". When no parameter given returns \'test\'\n"
"example: test[ X] When no parameter given returns \'test\'\n"
"[opt1{param}]||[opt2{param}] \"or\" to select between options \n"
"example: [X{X}]||[X{x}] will return X5 if either parameter \'x\' or \'X\' are 5, first find has priority (X in this case). Will not return anything if no X or x parameters are defined.\n"
"[&&(N)] at least parameters for N optional sets must be present  \n"
"example: [&&(1)][X{X}]||[X{x}] will return missing parameter error if X and x are not defined\n"
"example: [&&(1)][X{X}][Y{Y}] will return missing parameter error if at least 1 of them is not defined.\n"
"separate commands with \n"
" for multiple commands per command"))
        self.groupBox_CCD_actionChanges.setTitle(_translate("Dialog_CCD", "Actions"))
        self.lineEdit_CCD_action.setToolTip(_translate("Dialog_CCD", "action Name Field"))
        self.pushButton_CCD_actionAdd.setToolTip(_translate("Dialog_CCD", "Add new action or Replace format in action"))
        self.pushButton_CCD_actionDel.setToolTip(_translate("Dialog_CCD", "Delete action or clear format in action"))
        self.lineEdit_CCD_Format.setToolTip(_translate("Dialog_CCD", "Format Field"))
        self.tableWidget_CCD_actionParam.setToolTip(_translate("Dialog_CCD", "Parameters of Format"))
        self.label_CCD_testResultFormat.setToolTip(_translate("Dialog_CCD", "Format interpretation"))
        self.pushButton_CCD_actionTest.setToolTip(_translate("Dialog_CCD", "Press me to test with different parameter value on table."))
        self.pushButton_CCD_actionTest.setText(_translate("Dialog_CCD", "Test Action"))
        self.label_CCD_testResult.setToolTip(_translate("Dialog_CCD", "Gcode interpretation Result"))
        self.tabWidget_CCD_configs.setTabText(self.tabWidget_CCD_configs.indexOf(self.tab_CCD_ActionConfig), _translate("Dialog_CCD", "Action Config"))
        self.groupBox_CCD_readChanges.setToolTip(_translate("Dialog_CCD", "Read Configuration from *.rccfg file.\n"
"Interfaces must contain the same number and matching Ids of the ones defined in each .cccfg .rccfg and .iccfg\n"
"in this file will store regex configurations for matching the read interface responses.\n"
"Each interface has its own format to report data as positions,temperatures\n"
"All actions in this file will be read in the read routine and the matching parameters will be returned in a dictionary.\n"
"Regex pattern code is given inside the following r\'code_to_match\' else interpreted as string\n"
"Incorrect regex code will not get data from the device interface response. check the correct regular expression in https://pythex.org/\n"
"[#{param}] include the match group number as integer and the parameter to store it in the dictionary.\n"
"example: <r\'XPos:([+-]?[0-9]*[.][0-9]+)\'[1{Xpos}]> will match the pattern in r\'\' and set Xpos parameter to the first matching value.\n"
"Any read parameters are stored in a dictionary. You can call this parameters from loops.\n"
"Required parameters to be found to read: ACK,STATUS or STATE_XYZ,XPOS,YPOS,ZPOS\n"
"Unrecognized commands and errors will be printed in the log\n"
""))
        self.groupBox_CCD_readChanges.setTitle(_translate("Dialog_CCD", "Read actions"))
        self.lineEdit_CCD_readaction.setToolTip(_translate("Dialog_CCD", "Read action Name Field"))
        self.pushButton_CCD_readactionAdd.setToolTip(_translate("Dialog_CCD", "Add new Read action or Replace format in action"))
        self.pushButton_CCD_readactionDel.setToolTip(_translate("Dialog_CCD", "Delete Read action or clear format in action"))
        self.lineEdit_CCD_readFormat.setToolTip(_translate("Dialog_CCD", "Format Field in regex r\' \' delimited"))
        self.lineEdit_CCD_testRead_text.setToolTip(_translate("Dialog_CCD", "type here a machine response to test the read command"))
        self.tableWidget_CCD_readactionParam.setToolTip(_translate("Dialog_CCD", "Parameters of Format"))
        self.label_CCD_testreadResultFormat.setToolTip(_translate("Dialog_CCD", "test Text interpretation Result"))
        self.pushButton_CCD_readactionTest.setToolTip(_translate("Dialog_CCD", "Do all action tests including or replacing the test format in the read sequence.\n"
"        Read sequence is the same as in the file order. \n"
"        When is a new Read action then is executed after all the others."))
        self.pushButton_CCD_readactionTest.setText(_translate("Dialog_CCD", "Test Action"))
        self.label_CCD_testreadResult.setToolTip(_translate("Dialog_CCD", "All Read process interpretation Result"))
        self.tabWidget_CCD_configs.setTabText(self.tabWidget_CCD_configs.indexOf(self.tab_CCD_ReadConfig), _translate("Dialog_CCD", "Read Config"))
        self.tabWidget_CCD_configs.setTabText(self.tabWidget_CCD_configs.indexOf(self.tab_CCD_GeneralConfig), _translate("Dialog_CCD", "General Config"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog_CCD = QtWidgets.QDialog()
    ui = Ui_Dialog_CCD()
    ui.setupUi(Dialog_CCD)
    Dialog_CCD.show()
    sys.exit(app.exec_())
